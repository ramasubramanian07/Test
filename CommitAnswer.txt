package com.Optix.IM;

import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; import org.testng.annotations.Test;

import com.dispatch.optix.Dispatch_Login; import com.e2e.Utilities.BaseClass; import com.e2e.Utilities.CommonFunctions; import com.e2e.Utilities.ExtentReport; import com.e2e.Utilities.PrintUtil; import com.e2e.Utilities.WebDriverInstance; import com.e2e.Utilities.WebDriverUtility;

public class MoreOptions_Menu extends BaseClass {

private static WebDriverInstance instance;
public static String ApplPropFilePath = "propertyFiles/optix.properties";
CommonFunctions common = new CommonFunctions();
static WebDriverUtility web = new WebDriverUtility();
public static Logger logger = LogManager.getLogger(MoreOptions_Menu.class);
public static String url = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "optixDispatch_URL");

// Locators from property file
public static String More_Option = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "More_Option");
public static String UpdateJob = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "UpdateJob");
public static String Choose_Action = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "Choose_Action");
public static String UpdatePLD = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "UpdatePLD");
public static String SuccessMsgXpath = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "SuccessMsgXpath");
public static String JobIDField = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "JobIDField");
public static String Updatebtn = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "Updatebtn");
public static String RemoveJobTech = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "RemoveJobTech");
public static String TechEcField = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "TechEcField");
public static String RemoveMsg = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "RemoveMsg");
public static String CancelJob = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "CancelJob");
public static String CancelMsg = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "CancelMsg");

@Test(priority = 1)
public void testLoginAndInit() throws Exception {
    ExtentReport.startExtentTestCase("Optix Dispatch Login and Setup");
    try {
        instance = new WebDriverInstance();
        driver = instance.getWebDriverInstace("Chrome");
        driver.get(url);
        System.out.println("URL: " + url);
        Dispatch_Login.DispatchLogin(driver);
        Thread.sleep(10000);
    } catch (Exception e) {
        PrintUtil.logError("Exception during login", logger, "Login", driver, "FAIL");
        listener.runOnFinish("com.Optix.IM", "Login", "FAILED");
    }
}

@Test(priority = 2, dependsOnMethods = {"testLoginAndInit"})
public void testUpdatePLD() {
    ExtentReport.startExtentTestCase("Update Job to PLD");
    try {
        Update_PLD.updateJobToPld("083DT5006");
        PrintUtil.logSuccess("Update to PLD passed", logger);
        listener.runOnFinish("com.Optix.IM", "UpdatePLD", "PASSED");
    } catch (Exception e) {
        PrintUtil.logError("Update to PLD failed", logger, "UpdatePLD", driver, "FAIL");
        listener.runOnFinish("com.Optix.IM", "UpdatePLD", "FAILED");
    }
}

@Test(priority = 3, dependsOnMethods = {"testUpdatePLD"})
public void testRemoveJobTech() {
    ExtentReport.startExtentTestCase("Remove Job Technician");
    try {
        RemoveJobTechTimeline.RemoveJobTech("083DT5006", "bdi");
        PrintUtil.logSuccess("Remove Tech passed", logger);
        listener.runOnFinish("com.Optix.IM", "RemoveTech", "PASSED");
    } catch (Exception e) {
        PrintUtil.logError("Remove Tech failed", logger, "RemoveTech", driver, "FAIL");
        listener.runOnFinish("com.Optix.IM", "RemoveTech", "FAILED");
    }
}

@Test(priority = 4, dependsOnMethods = {"testRemoveJobTech"})
public void testCancelJob() {
    ExtentReport.startExtentTestCase("Cancel Job");
    try {
        Cancel_Job.cancelJob("083DT5006");
        PrintUtil.logSuccess("Cancel Job passed", logger);
        listener.runOnFinish("com.Optix.IM", "CancelJob", "PASSED");
        driver.close();
    } catch (Exception e) {
        PrintUtil.logError("Cancel Job failed", logger, "CancelJob", driver, "FAIL");
        listener.runOnFinish("com.Optix.IM", "CancelJob", "FAILED");
    }
}

}
package com.Optix.IM;

import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; import org.testng.annotations.Test;

import com.dispatch.optix.Dispatch_Login; import com.e2e.Utilities.BaseClass; import com.e2e.Utilities.CommonFunctions; import com.e2e.Utilities.ExtentReport; import com.e2e.Utilities.PrintUtil; import com.e2e.Utilities.WebDriverInstance; import com.e2e.Utilities.WebDriverUtility;

public class MoreOptions_Menu extends BaseClass {

private static WebDriverInstance instance;
public static String ApplPropFilePath = "propertyFiles/optix.properties";
CommonFunctions common = new CommonFunctions();
static WebDriverUtility web = new WebDriverUtility();
public static Logger logger = LogManager.getLogger(MoreOptions_Menu.class);
public static String url = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "optixDispatch_URL");

// Locators from property file
public static String More_Option = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "More_Option");
public static String UpdateJob = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "UpdateJob");
public static String Choose_Action = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "Choose_Action");
public static String UpdatePLD = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "UpdatePLD");
public static String SuccessMsgXpath = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "SuccessMsgXpath");
public static String JobIDField = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "JobIDField");
public static String Updatebtn = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "Updatebtn");
public static String RemoveJobTech = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "RemoveJobTech");
public static String TechEcField = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "TechEcField");
public static String RemoveMsg = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "RemoveMsg");
public static String CancelJob = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "CancelJob");
public static String CancelMsg = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "CancelMsg");

@Test(priority = 1)
public void testLoginAndInit() throws Exception {
    ExtentReport.startExtentTestCase("Optix Dispatch Login and Setup");
    try {
        instance = new WebDriverInstance();
        driver = instance.getWebDriverInstace("Chrome");
        driver.get(url);
        System.out.println("URL: " + url);
        Dispatch_Login.DispatchLogin(driver);
        Thread.sleep(10000);
    } catch (Exception e) {
        PrintUtil.logError("Exception during login", logger, "Login", driver, "FAIL");
        listener.runOnFinish("com.Optix.IM", "Login", "FAILED");
    }
}

@Test(priority = 2, dependsOnMethods = {"testLoginAndInit"})
public void testUpdatePLD() {
    ExtentReport.startExtentTestCase("Update Job to PLD");
    try {
        Update_PLD.updateJobToPld("083DT5006");
        PrintUtil.logSuccess("Update to PLD passed", logger);
        listener.runOnFinish("com.Optix.IM", "UpdatePLD", "PASSED");
    } catch (Exception e) {
        PrintUtil.logError("Update to PLD failed", logger, "UpdatePLD", driver, "FAIL");
        listener.runOnFinish("com.Optix.IM", "UpdatePLD", "FAILED");
    }
}

@Test(priority = 3, dependsOnMethods = {"testUpdatePLD"})
public void testRemoveJobTech() {
    ExtentReport.startExtentTestCase("Remove Job Technician");
    try {
        RemoveJobTechTimeline.RemoveJobTech("083DT5006", "bdi");
        PrintUtil.logSuccess("Remove Tech passed", logger);
        listener.runOnFinish("com.Optix.IM", "RemoveTech", "PASSED");
    } catch (Exception e) {
        PrintUtil.logError("Remove Tech failed", logger, "RemoveTech", driver, "FAIL");
        listener.runOnFinish("com.Optix.IM", "RemoveTech", "FAILED");
    }
}

@Test(priority = 4, dependsOnMethods = {"testRemoveJobTech"})
public void testCancelJob() {
    ExtentReport.startExtentTestCase("Cancel Job");
    try {
        Cancel_Job.cancelJob("083DT5006");
        PrintUtil.logSuccess("Cancel Job passed", logger);
        listener.runOnFinish("com.Optix.IM", "CancelJob", "PASSED");
        driver.close();
    } catch (Exception e) {
        PrintUtil.logError("Cancel Job failed", logger, "CancelJob", driver, "FAIL");
        listener.runOnFinish("com.Optix.IM", "CancelJob", "FAILED");
    }
}

}









package com.Optix.IM;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.testng.annotations.Test;

import com.dispatch.optix.Dispatch_Login;
import com.e2e.Utilities.BaseClass;
import com.e2e.Utilities.CommonFunctions;
import com.e2e.Utilities.ExtentReport;
import com.e2e.Utilities.PrintUtil;
import com.e2e.Utilities.WebDriverInstance;
import com.e2e.Utilities.WebDriverUtility;

public class MoreOptions_Menu extends BaseClass{
	
	private static WebDriverInstance instance;
	public static String ApplPropFilePath = "propertyFiles/optix.properties";
	public static String PropFilePath = "propertyFiles/optix.properties";
	CommonFunctions common = new CommonFunctions();
	static WebDriverUtility web = new WebDriverUtility();
	public static Logger logger = LogManager.getLogger(MoreOptions_Menu.class);
	public static String url = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "optixDispatch_URL");
	public static String env = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "environment");
	//MORE OPTIONS Menu
	public static String More_Option = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "More_Option");
	public static String UpdateJob = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "UpdateJob");
	public static String Choose_Action = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "Choose_Action");
	public static String UpdatePLD = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "UpdatePLD");
	public static String SuccessMsgXpath = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "SuccessMsgXpath");
	public static String Closescreen = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "Closescreen");
	public static String JobIDField = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "JobIDField");
	public static String Updatebtn = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "Updatebtn");
	public static String RemoveJobTech = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "RemoveJobTech");
	public static String TechEcField = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "TechEcField");
	public static String RemoveMsg = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "RemoveMsg");
	public static String CancelJob = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "CancelJob");
	public static String CancelMsg = CommonFunctions.getPropValuesFromFile(ApplPropFilePath, "CancelMsg");
	
	@Test
	public static void updateJObCheck() throws Exception {
		ExtentReport.startExtentTestCase("OptixDispatch IM Update Job Actions");
		try {
			//DashboardLoad dash=new DashboardLoad();
			//DispatchTechMonSearchResults dsr = new DispatchTechMonSearchResults();
			instance = new WebDriverInstance();
			driver = instance.getWebDriverInstace("Chrome");
			driver.get(url);
			System.out.println("URL: " + url);
			String actualTitle = driver.getTitle();
			System.out.println("Actual Title: " + actualTitle);
			// Logging into Optix Dispatch
			Dispatch_Login.DispatchLogin(driver);
			Thread.sleep(10000);
			
			//TC:01 UPDATE PLD
			





public static void RemoveJobTech(String jobid, String techec) {
    try {
        Thread.sleep(1000);
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(More_Option), 10).click();
        Thread.sleep(2000);
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(UpdateJob), 10).click();
        Thread.sleep(2000);
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(Choose_Action), 10).click();
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(RemoveJobTech), 10).click();
        Thread.sleep(2000);
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(JobIDField), 10).sendKeys(jobid);
        Thread.sleep(2000);
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(TechEcField), 10).sendKeys(techec);
        Thread.sleep(2000);
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(Updatebtn), 10).click();

        // Wait for success message after update
        WebElement successMsg = WebDriverUtility.waitForVisibilityOfElementLocated(
            driver, wait, By.xpath(SuccessMsgXpath), 10); // <- Variable for success msg xpath

        String msgText = successMsg.getText();
        System.out.println("Success Message: " + msgText);

        if (msgText.contains("removed successfully")) {
            System.out.println("Remove operation verified: " + msgText);
            // listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "PASSED");
        } else {
            System.out.println("Success message not matched!");
            // listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "FAILED");
        }

    } catch (Exception e) {
        System.out.println("Exception in RemoveJobTech: " + e.toString());
        // listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "FAILED");
    }
}
SuccessMsgXpath = //div[contains(text(), 'removed successfully')]





JOBID - 083DT5006 removed successfully!!
public static void RemoveJobTech(String jobid,String techec) {
	    try {
	        Thread.sleep(1000);
	        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(More_Option), 10).click();
	        Thread.sleep(2000);
	        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(UpdateJob), 10).click();
	        Thread.sleep(2000);
	        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(Choose_Action), 10).click();
	        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(RemoveJobTech), 10).click();
	        Thread.sleep(2000);
	        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(JobIDField), 10).sendKeys(jobid);
	        Thread.sleep(2000);
	        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(TechEcField), 10).sendKeys(techec);
	        Thread.sleep(2000);
	        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(Updatebtn), 10).click();

	        // Wait for success message after update
	        WebElement successMsg = WebDriverUtility.waitForVisibilityOfElementLocated(
	            driver, wait, By.xpath(SuccessMsgXpath), 10); // <- Use variable for success msg xpath

	        String msgText = successMsg.getText();
	        System.out.println("Success Message: " + msgText);

	        if (msgText.contains("updated successfully")) {
	            System.out.println("Update verified: " + msgText);
	            // listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "PASSED");
	        } else {
	            System.out.println("Success message not matched!");
	            // listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "FAILED");
	        }

	    } catch (Exception e) {
	        System.out.println("Exception in updateJobToPld: " + e.toString());
	        // listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "FAILED");
	    }
	}


}

XML
<parameter name="JOBID" value="083DT5006" />
	<test name="AYS Testcases">
		<classes>
			<class name="com.Optix.IM.MoreOptions_Menu"/>
		</classes>
	</test>

MoreOPtionsMenu:
//TC:01 UPDATE PLD
			Update_PLD.updateJobToPld("083DT5006");
			// TC:02 RemoveJobTech
			RemoveJobTechTimeline.RemoveJobTech("083DT5006","bdi");
			//TC:03CancelJob


































public class OptisDashboardTest extends BaseClass {
    public static final String DASHBOARD_XPATH = "optisDashboard";  // Property reference

    public void verifyDashboardLoaded() throws Exception {
        try {
            System.out.println("⚡ Checking Dashboard Load...");
            WebElement dashboardElement = driver.findElement(By.xpath(properties.getProperty(DASHBOARD_XPATH)));

            if (dashboardElement != null && dashboardElement.isDisplayed()) {
                System.out.println("✅ Test Passed: Dashboard loaded successfully.");
            } else {
                System.out.println("❌ Test Failed: Dashboard is not displayed.");
                throw new Exception("Dashboard element not found or not visible!");
            }

            // Assertion
            Assert.assertNotNull(dashboardElement, "Dashboard element not found!");
            Assert.assertTrue(dashboardElement.isDisplayed(), "Dashboard is not displayed!");

        } catch (Exception e) {
            System.out.println("❌ Error in verifying Dashboard: " + e.getMessage());
            throw new Exception("Test Execution Failed - " + e.getMessage());
        }
    }
}
