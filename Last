public static boolean isElementDisplayed(RemoteWebDriver driver, String xpath, String stepName) {
    boolean isDisplayed = false;

    try {
        WebElement element = driver.findElement(By.xpath(xpath));
        if (element.isDisplayed()) {
            System.out.println("PASS: " + stepName + " is displayed.");
            isDisplayed = true;
        } else {
            System.out.println("FAIL: " + stepName + " is not displayed.");
        }
    } catch (Exception e) {
        System.out.println("EXCEPTION in step: " + stepName + " - " + e.getMessage());
    }

    return isDisplayed;
}







@Then("{actor} verify The SPM Site Is Viewable")
public void verify_The_SPM_Site_Is_Viewable(Actor actor) {
    String originalWindow = getDriver().getWindowHandle();

    // Switch only if not already switched
    if (getDriver().getWindowHandles().size() > 1) {
        for (String windowHandle : getDriver().getWindowHandles()) {
            if (!originalWindow.contentEquals(windowHandle)) {
                getDriver().switchTo().window(windowHandle);
                break;
            }
        }
    }

    // Now verify the element is visible
    boolean isElementPresent = getDriver().findElement(IBpage.SpmSiteView).isDisplayed();
    Assert.assertTrue("SPM Site is not viewable", isElementPresent);
}






actor.attemptsTo(
    Click.on(Target.the("Unselected row checkbox")
        .located(By.xpath("//input[@type='checkbox' and @aria-label='Select row' and @aria-checked='false']/following-sibling::label")))
);

//input[@type='checkbox' and @aria-label='Select row' and @aria-checked='false']/following-sibling::label


//label[@class='k-checkbox-label k-no-text' and @for='6e70b5c7-45f3-4e47-ad18-51a4c6393c77']





@And("{actor} Navigates To Transport Module")
public void Navigates_To_Transport_Module(Actor actor) {
    actor.attemptsTo(Click.on(IbPage.TransportModule));

    // Switch to new window
    String originalWindow = getDriver().getWindowHandle();
    new WebDriverWait(getDriver(), Duration.ofSeconds(10))
        .until(ExpectedConditions.numberOfWindowsToBe(2));

    for (String windowHandle : getDriver().getWindowHandles()) {
        if (!originalWindow.contentEquals(windowHandle)) {
            getDriver().switchTo().window(windowHandle);
            break;
        }
    }

    // Now wait for the OneFiber element AFTER switching
    WaitUntil.the(Visibility.of(IbPage.OneFiber)).forNoMoreThan(10).seconds();
}







try {
    // Initial setup
    instance = new WebDriverInstance();
    driver = instance.getWebDriverInstance("chrome");
    driver.get(url);
    System.out.println("URL: " + url);
    String actualTitle = driver.getTitle();
    System.out.println("Actual Title: " + actualTitle);

    // Login
    Dispatch_Login.DispatchLogin(driver);
    Thread.sleep(10000);

    // Search actions
    WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(dispatchSearchTextbox), 10).sendKeys(searchitem);
    WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(First_Option), 10).click();
    WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(dispatchSearchButton), 10).click();

    // Wait for possible job summary or popup
    Thread.sleep(5000); // Optional, depends on system behavior

    // Check if job summary is visible
    List<WebElement> jobSummaryElements = driver.findElements(By.xpath(jobSummary));
    if (jobSummaryElements.size() > 0 && jobSummaryElements.get(0).isDisplayed()) {
        // Compare job summary content
        String summaryText = WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(jobSummaryLabel), 10).getText();
        Assert.assertEquals(summaryText, searchitem);

        // Click back
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(dispatchbackbutton), 10).click();

        Listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "PASSED");
    } else {
        // Job summary not found â†’ Fail the test
        Assert.fail("Job summary not displayed. Possible no-data popup shown.");
    }

    driver.quit();

} catch (Exception e) {
    System.out.println(e.toString());
    Listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "FAILED");
}






try {
    // Perform search
    WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(dispatchSearchTextbox), 10).sendKeys(searchText);
    WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(First_Option), 10).click();
    WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(dispatchSearchButton), 10).click();

    // Wait and check if DispatchPage is displayed
    WebElement dispatchPage = WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(jobSummary), 10);

    if (dispatchPage != null && dispatchPage.isDisplayed()) {
        // Continue with validations if dispatch page is displayed
        Assert.assertTrue("Dispatch Page is displayed", true);

        // Example: Validate job summary label
        WebElement summaryLabel = WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(jobSummaryLabel), 10);
        Assert.assertTrue("Job Summary Label is displayed", summaryLabel.isDisplayed());

        // Back Button
        WebDriverUtility.waitForVisibilityOfElementLocated(driver, wait, By.xpath(dispatchbackbutton), 10).click();

        LoggerUtil.logSuccess("Optix Dispatch Search Results", "PASSED");
        Listener.runOnFinish("com.optixdispatch.IM", "DispatchSearchResults", "PASSED");

    } else {
        // DispatchPage not displayed - mark as failed
        Assert.fail("Dispatch result is not displayed after search.");
    }

} catch (Exception e) {
    System.out.println(e.toString());
    Listener
